2017/04/05

git pull: version vom 04.04.2017

result:
+ ..

change:
+ refreshUI mit self.running abfrage

result:
+ continuous 1khz, app friert nach start

change:
+ restart

result:
+ continuous, ändern des modus während der messung macht keinen unterschied
+ finite 10hz 30s ungestoppt, friert app ein

change:
+ restart

result:
+ continuous ok
+ finite 10hz 30s friert nach ablauf ein

change:
+  timeout(2.0) in messageQ.get

result:
+ finite 10hz 30s friert app

change:
+ ersetze break mit continue in der i>steps abfrage in contthread_test

result:
+ error message von finiteMeasurement

change:
+ continue zurück auf break
+ print an letzter stelle in waitforstopmessage

result:
+ app friert nach ablauf finite
+ letzter print in waitforstopmessage wird nicht ausgeführt

change:
+ break statt continue in waitforstopmessage

result:
+ finite stopped ok
+ finite unstopped, app friert

change:
+ change back to continue in waitforstopmessage
+ pyqtslot vor stopbtn aus-#

result:
+ letzter print wird nicht ausgeführt -> break macht mehr sinn als continue

change:
+ continue -> break
+ signal.taskDone als lambda

result:
+ wie zuvor

change:
+ slots aus-#

result:
+ wie zuvor

change:
+ try/except um animate()

result:
+ finite 10hz 3s ok
+ 2te finite 10hz 3s, friert wieder

change:
+ print in except um animate()

result:
+ wieder frieren

change:
+ finally: __del__ anim

result:
+ wie zuvor

change:
+ timeout(5.0) in waitforstopmessage
+ timeout(1.0) in 

result:
+ x and y data must be same length

change:
+ try/except um get() in update in animation_processless
+ kein timeout

result:
+ finite 10hz 3s ok, file
+ 2te finite hängt wieder

change:
+ git pull version 1 vom 04.04.2017

result:
+ ebenfalls freeze

change:
+ ohne animation

result:
+ alles ok, liegt also an der animation

change:
+ timeout in updateAnimation

result:
+ timeout expires and error gets thrown: " x and x not same length"

change:
+ bei exception self._tdata[-1].remove() um x und y auf die selbe länge zu bekommen

result:
+ kein remove für listen

change:
+ del tdata[-1]

result:
+ ok

change:
+ speichern ausgelagert, 

result:
messungen bringen keinen error mehr, patch bleibt

change:
+ refreshUI nur bei self.running=False
+ del self._subprocess, also den counter

result:
+ immer neuer python prozess, obwohl counter jedes mal gelöscht wird
+ das selbe auch für die animation

change:
+ animation nur einmal init, dann später del anim in stopbtn

result:
+ ok, nur ein prozess mehr, animation wird wieder im gleichen fenster gezeigt

change:
+ join(timeout=1.0) process in stopBtn

result:
+ kein join()

change:
+ Queue.close() oder Queue.queue.clear()

result:
+ kein join() bei close(), noch bei queue.clear()

##################
git push
##################

change:
+ function that finds max in updateAnimation

result:
+ stranges verhalten